# Log4J2 configuration file.
# Mostly from https://stackoverflow.com/a/46368163
# Some from https://howtodoinjava.com/log4j2/log4j2-properties-example/

# Set to debug or trace if log4j initialization is failing
status = warn
# Name of the configuration
name = MagicLogging

# Give directory path where log files should get stored
# property.basePath = ./log/

# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = consoleLogger
# appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
# appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%c] [%M] [%l] - %msg%n
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
# appender.rolling.fileName= ${basePath}magic.log
# appender.rolling.filePattern= ${basePath}magic_%d{yyyyMMdd}.log.gz
appender.rolling.fileName= ${sys:java.io.tmpdir}magic.log
appender.rolling.filePattern= ${sys:java.io.tmpdir}magic_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type = PatternLayout
# appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%c] [%M] [%l] - %msg%n
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
appender.rolling.policies.type = Policies

# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
# Delete files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging
logger.magic.name = magic
logger.magic.level = debug
logger.magic.additivity = false
logger.magic.appenderRef.rolling.ref = fileLogger
logger.magic.appenderRef.console.ref = consoleLogger

# Configure root logger for logging error logs in classes which are in package other than above specified package
# rootLogger.level = error
rootLogger.level = debug
rootLogger.additivity = false
rootLogger.appenderRef.rolling.ref = fileLogger
# rootLogger.appenderRef.stdout.ref = consoleLogger
rootLogger.appenderRef.console.ref = consoleLogger
